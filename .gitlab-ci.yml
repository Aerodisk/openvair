variables:
  GIT_DEPTH: "0"
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: clone
  DEBIAN_FRONTEND: noninteractive
  OPENVAIR_LOGIN: ${OPENVAIR_LOGIN}
  OPENVAIR_PASSWORD: ${OPENVAIR_PASSWORD}
  HOST_IP: "0.0.0.0"

stages:
  - branch_check
  - install
  - test-dev-merge

image: alpine:3.18

install_openvair:
  image: ubuntu:20.04
  before_script:
    - apt-get update
    - apt-get install -y curl iproute2 netcat-openbsd
  stage: install
  script:
    - useradd -s /bin/bash -d /opt/aero -m aero
    - chmod +x /opt/aero
    - 'echo "aero ALL=(ALL) NOPASSWD: ALL" | tee /etc/sudoers.d/aero'
    
    # For container environment, we can use localhost or 0.0.0.0
    - 'echo "Using localhost for container environment"'
    - HOST_IP=$HOST_IP

    # Copy the automatically checked-out repository to /home/aero
    - cp -r "$CI_PROJECT_DIR" /home/aero/openvair
    - chown -R aero:aero /home/aero/openvair

    # Configure project
    - su - aero -c "cat > /home/aero/openvair/project_config.toml << EOF
      [default_user]
      login = '$OPENVAIR_LOGIN'
      password = '$OPENVAIR_PASSWORD'
      
      [web_app]
      host = '${HOST_IP}'
      port = 8000
      EOF"
    
    # Run installation script
    - su - aero -c "cd /home/aero/openvair && ./install.sh"

    # Check web-app & port status after installation
    - ps aux | grep web-app
    - |
      timeout 30 bash -c 'until nc -z localhost 8000; do echo "Waiting for web-app to start..."; sleep 1; done'

    # Test service accessibility
    - echo "Testing web-app accessibility..."
    - curl -f --connect-timeout 10 "http://${HOST_IP}:8000/" || (echo "Failed to connect to web-app"; exit 1)

  artifacts:
    paths:
      - /opt/aero/openvair/
    expire_in: 1 week
  rules:
    - when: always

branch_protection:
  before_script:
    - apk add --no-cache bash
  stage: branch_check
  script:
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "main" ]]; then
        echo "Direct push to main branch is not allowed!"
        echo "Please create merge request from dev branch"
        exit 1
      elif [[ "$CI_COMMIT_REF_NAME" == "dev" ]]; then
        echo "Direct push to dev branch is not allowed!"
        echo "Please create merge request from pre_dev branch"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always

validate_dev_merge:
  before_script:
    - apk add --no-cache bash
  stage: test-dev-merge
  script:
    - |
      if [[ "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" != "pre_dev" ]]; then
        echo "Merging to dev is only allowed from pre_dev branch!"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'
      when: always
  needs:
    - job: install_openvair
      optional: true

validate_main_merge:
  before_script:
    - apk add --no-cache bash
  stage: test-dev-merge
  script:
    - |
      if [[ "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" != "dev" ]]; then
        echo "Merging to main is only allowed from dev branch!"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
  needs:
    - job: install_openvair
      optional: true