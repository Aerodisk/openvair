variables:
  GIT_DEPTH: "0"
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: clone
  DEBIAN_FRONTEND: noninteractive
  # OPENVAIR_LOGIN: ${OPENVAIR_LOGIN}
  # OPENVAIR_PASSWORD: ${OPENVAIR_PASSWORD}
  HOST_IP: "0.0.0.0"

stages:
  - branch_check
  - install
  - test-dev-merge

image: alpine:3.18

install_openvair:
  image: ubuntu:20.04
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y curl iproute2 netcat-openbsd lsb-release sudo tmux gawk screen
  stage: install
  script:
    - useradd -s /bin/bash -d /opt/aero -m aero
    - chmod +x /opt/aero
    - mkdir -p /etc/sudoers.d
    - 'echo "aero ALL=(ALL) NOPASSWD: ALL" | tee /etc/sudoers.d/aero'
    - chmod 0440 /etc/sudoers.d/aero
    
    # Create necessary directories
    - mkdir -p /opt/aero/openvair
    - mkdir -p /home/aero/openvair
    - chown -R aero:aero /home/aero
    - chown -R aero:aero /opt/aero

    - 'echo "Using localhost for container environment"'
    - HOST_IP=${HOST_IP:-127.0.0.1}

    # Copy files
    - cp -r "$CI_PROJECT_DIR"/. /home/aero/openvair/
    - cp -r "$CI_PROJECT_DIR"/. /opt/aero/openvair/
    
    # Set permissions
    - chown -R aero:aero /home/aero/openvair
    - chown -R aero:aero /opt/aero/openvair
    - chmod +x /home/aero/openvair/install.sh
    - chmod +x /opt/aero/openvair/install.sh

    # Create project config
    - |
      su - aero -c "cat > /home/aero/openvair/project_config.toml << EOL
      [default_user]
      login = '${OPENVAIR_LOGIN}'
      password = '${OPENVAIR_PASSWORD}'
      
      [web_app]
      host = '${HOST_IP}'
      port = 8000
      EOL"
    - cp /home/aero/openvair/project_config.toml /opt/aero/openvair/

    # Create log directory
    - mkdir -p /opt/aero/openvair
    - touch /opt/aero/openvair/install.log
    - chown -R aero:aero /opt/aero/openvair/install.log

    # Try to run with screen instead of tmux
    - export TERM=xterm
    - 'su - aero -c "TERM=xterm screen -dm bash -c \"cd /home/aero/openvair && ./install.sh\""'
    - sleep 5  # Give some time for the installation to start

    # Monitor the installation progress
    - 'tail -f /opt/aero/openvair/install.log & tail_pid=$!'
    
    # Wait for service to start (with timeout)
    - |
      max_attempts=30
      attempt=1
      while [ $attempt -le $max_attempts ]; do
        if curl -s http://localhost:8000/ > /dev/null; then
          echo "Service is up!"
          kill $tail_pid
          exit 0
        fi
        echo "Attempt $attempt/$max_attempts: Service not ready yet..."
        sleep 1
        attempt=$((attempt + 1))
      done
      kill $tail_pid
      echo "Service failed to start after $max_attempts attempts"
      exit 1

  artifacts:
    paths:
      - /opt/aero/openvair/
      - /opt/aero/openvair/install.log
    when: always
    expire_in: 1 week
  rules:
    - when: always

branch_protection:
  before_script:
    - apk add --no-cache bash
  stage: branch_check
  script:
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "main" ]]; then
        echo "Direct push to main branch is not allowed!"
        echo "Please create merge request from dev branch"
        exit 1
      elif [[ "$CI_COMMIT_REF_NAME" == "dev" ]]; then
        echo "Direct push to dev branch is not allowed!"
        echo "Please create merge request from pre_dev branch"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always

validate_dev_merge:
  before_script:
    - apk add --no-cache bash
  stage: test-dev-merge
  script:
    - |
      if [[ "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" != "pre_dev" ]]; then
        echo "Merging to dev is only allowed from pre_dev branch!"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'
      when: always
  needs:
    - job: install_openvair
      optional: true

validate_main_merge:
  before_script:
    - apk add --no-cache bash
  stage: test-dev-merge
  script:
    - |
      if [[ "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" != "dev" ]]; then
        echo "Merging to main is only allowed from dev branch!"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
  needs:
    - job: install_openvair
      optional: true